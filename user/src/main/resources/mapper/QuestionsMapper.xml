<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinwei.teachingplan.mapper.QuestionsMapper">


    <insert id="addQuestions" useGeneratedKeys="true" keyProperty="id" parameterType="com.xinwei.teachingplan.bo.QuestionsBo">
        insert into questions(
            user_id,
            grade,
            course,
            complexity,
            questions_type,
            year,
            label,
            knowledge,
            questions_start,
            questions_start_image,
            questions_answer,
            questions_answer_image,
            questions_analyze,
            questions_analyze_image,
            questions_remark,
            questions_remark_image,
            questions_explain,
            questions_explain_image
        )values (
            #{id},
            #{grade},
            #{course},
            #{complexity},
            #{questionsType},
            #{year},
            #{label},
            #{knowledge},
            #{questionsStart},
            #{questionsStartImage},
            #{questionsAnswer},
            #{questionsAnswerImage},
            #{questionsAnalyze},
            #{questionsAnalyzeImage},
            #{questionsRemark},
            #{questionsRemarkImage},
            #{questionsExplain},
            #{questionsExplainImage}
        )
    </insert>
    <update id="delete">
        update questions
        set is_del = 1
        where id = #{id}
    </update>
    <delete id="deletePersonal">
        delete from personal
        where user_id = #{userId} and questions_id = #{id}
    </delete>
    <select id="queryQuestions" parameterType="com.xinwei.teachingplan.bo.QueryQuestionsBo"
            resultType="com.xinwei.teachingplan.entity.QuestionBaseEntity">
        select
        q.id,
        q.questions_start questionsStart,
        q.questions_start_image questionsStartImage
        from questions q
        <if test="flag == 1">
            inner join personal p
            on p.questions_id = q.id
        </if>
        where q.is_del = 0
        <if test="grade != null">
            and grade = #{grade}
        </if>
        <if test="course != null">
            and course = #{course}
        </if>
        <if test="complexity != null and  complexity.size >0">
            and complexity in
            <foreach collection="complexity" item="g" open="(" separator="," close=")">
                #{g}
            </foreach>
        </if>
        <if test="questionsType != null and questionsType.size >0">
            and questions_type in
            <foreach collection="questionsType" item="g" open="(" separator="," close=")">
                #{g}
            </foreach>
        </if>
        <if test="year != null and year.size >0">
            and year in
            <foreach collection="year" item="g" open="(" separator="," close=")">
                #{g}
            </foreach>
        </if>
        <if test="label != null and label.size >0">
            and label in
            <foreach collection="label" item="g" open="(" separator="," close=")">
                #{g}
            </foreach>
        </if>
        <if test="knowledge != null">
            and knowledge = #{knowledge}
        </if>
        <if test="flag == 1">
            and p.user_id = #{userId}
        </if>

    </select>
    <insert id="addMe">
        insert into personal(
            user_id,
            questions_id,
            teach_id
        )values (
            #{userId},
            #{questionsId},
            #{teachId}
        )on duplicate key  update update_time = CURRENT_TIMESTAMP
    </insert>
    <insert id="insertMenu" parameterType="com.xinwei.teachingplan.bo.MenuBo"
            useGeneratedKeys="true" keyProperty="oneId">
        insert into questions_menu(name,father_id)
        values(#{name},#{fatherId})
    </insert>
    <insert id="insertAttribute" parameterType="com.xinwei.teachingplan.bo.QuestionsBo">
        insert into questions_attribute(
            grade,
            course,
            complexity,
            questions_type,
            year,
            label,
            knowledge
        )values (
            #{grade},
            #{course},
            #{complexity},
            #{questionsType},
            #{year},
            #{label},
            #{knowledge}
        )
    </insert>
    <select id="queryAnswer" resultType="com.xinwei.teachingplan.entity.QuestionAnswerEntity">
        select
            id,
            questions_start questionsStart,
            questions_start_image questionsStartImage,
            questions_answer questionsAnswer,
            questions_answer_image questionsAnswerImage,
            questions_analyze questionsAnalyze,
            questions_analyze_image questionsAnalyzeImage,
            questions_remark questionsRemark,
            questions_remark_image questionsRemarkImage,
            questions_explain questionsExplain,
            questions_explain_image questionsExplainImage
        from questions
        where id = #{questionsId} and is_del = 0
    </select>
    <select id="queryAnswerMap" resultType="java.util.Map">
        select
            id,
            questions_start questionsStart,
            questions_start_image questionsStartImage,
            questions_answer questionsAnswer,
            questions_answer_image questionsAnswerImage,
            questions_analyze questionsAnalyze,
            questions_analyze_image questionsAnalyzeImage,
            questions_remark questionsRemark,
            questions_remark_image questionsRemarkImage,
            questions_explain questionsExplain,
            questions_explain_image questionsExplainImage
        from questions
        where id = #{questionsId} and is_del = 0
    </select>
</mapper>